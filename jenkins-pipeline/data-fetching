pipeline {
    agent any 
    environment  {
        SLACK_TOKEN = credentials('slack_token') 
        DOCKER_REPO = 'manojsiriparthi/gbfs-data' 
        GIT_REPO_NAME = "Manojsiriparthi/gbfs-data" 
        GIT_USER_NAME = "manojsiriparthi" 
        SLACK_CHANNEL = '#gbfs' 
    }
    
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs() 
            }
        }
        stage('Checkout from Git') {
            steps {
                git credentialsId: 'Git_Hub', url: 'https://github.com/Manojsiriparthi/gbfs-data.git'
            }
        }
        stage('Trivy File Scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt' 
            }
        }
        stage('Docker Image Build') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker_Hub') {
                        sh "docker build -t ${DOCKER_REPO}:latest ."
                    }
                }
            }
        }
        stage('Docker Image Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker_Hub') {
                        sh "docker push ${DOCKER_REPO}:latest"
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image ${DOCKER_REPO}:latest > trivyimage.txt" // Trivy scan of the built image
            }
        }
        stage('Update Deployment File in GitHub Repo') {
            steps {
                dir('Kubernetes-Manifestfiles') {
                    withCredentials([string(credentialsId: "GITHUB_TOKEN", variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "manojs.devops1@gmail.com"
                            git config user.name "manojsiriparthi"
                            sed -i 's|image:.*|image: manojsiriparthi/gbfs-data:latest|' cron-job.yml
                            git add cron-job.yml
                            git commit -m "Update deployment image to version latest"
                            git push https://${GITHUB_TOKEN}@github.com/Manojsiriparthi/gbfs-data.git HEAD:master
                        '''
                    }
                }
            }
        }
        stage('Slack Notification') {
            steps {
                script {
                    slackSend(
                        channel: "${SLACK_CHANNEL}",
                        color: "good",
                        message: "Successfully built and pushed Docker image: ${DOCKER_REPO}:latest. Updated Kubernetes CronJob with the new image."
                    )
                }
            }
        }
    }
    post {
        success {
            script {
                slackSend(
                    channel: "${SLACK_CHANNEL}",
                    color: "good",
                    message: "Jenkins Pipeline succeeded. Docker Image: ${DOCKER_REPO}:latest has been pushed and Kubernetes CronJob updated."
                )
            }
        }

        failure {
            script {
                slackSend(
                    channel: "${SLACK_CHANNEL}",
                    color: "danger",
                    message: "Jenkins Pipeline failed during build or deployment."
                )
            }
        }
    }
}
